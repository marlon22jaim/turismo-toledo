---
---
<section class="py-16 px-4 bg-gray-50 dark:bg-gray-800">
  <div class="max-w-6xl mx-auto">
    <h2 class="text-3xl font-bold text-center mb-12">Clima en Toledo</h2>
    <div id="weather-container" class="grid grid-cols-1 md:grid-cols-7 gap-4">
      {Array(7).fill(null).map(() => (
        <div class="weather-day animate-pulse bg-white dark:bg-gray-700 rounded-lg p-4 text-center">
          <div class="h-8 bg-gray-200 dark:bg-gray-600 rounded mb-4"></div>
          <div class="h-16 w-16 mx-auto bg-gray-200 dark:bg-gray-600 rounded-full mb-4"></div>
          <div class="h-6 bg-gray-200 dark:bg-gray-600 rounded"></div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  const WEATHER_API_KEY = 'YOUR_API_KEY'; // Reemplazar con tu API key de OpenWeatherMap
  const TOLEDO_LAT = 7.3139;
  const TOLEDO_LON = -72.4828;

  async function getWeatherData() {
    try {
      const response = await fetch(
        `https://api.openweathermap.org/data/2.5/forecast?lat=${TOLEDO_LAT}&lon=${TOLEDO_LON}&appid=${WEATHER_API_KEY}&units=metric&lang=es`
      );
      const data = await response.json();
      return processWeatherData(data);
    } catch (error) {
      console.error('Error fetching weather data:', error);
      return null;
    }
  }

  function processWeatherData(data) {
    const dailyData = [];
    const processedDates = new Set();

    for (const item of data.list) {
      const date = new Date(item.dt * 1000);
      const dateString = date.toISOString().split('T')[0];

      if (!processedDates.has(dateString) && dailyData.length < 7) {
        processedDates.add(dateString);
        dailyData.push({
          date: date,
          temp: Math.round(item.main.temp),
          icon: item.weather[0].icon,
          description: item.weather[0].description
        });
      }
    }

    return dailyData;
  }

  function getDayName(date) {
    return new Intl.DateTimeFormat('es-ES', { weekday: 'long' }).format(date);
  }

  function createWeatherCard(data) {
    return `
      <div class="weather-day bg-white dark:bg-gray-700 rounded-lg p-4 text-center transform hover:scale-105 transition-transform duration-300">
        <h3 class="font-semibold mb-3 capitalize">${getDayName(data.date)}</h3>
        <img 
          src="https://openweathermap.org/img/wn/${data.icon}@2x.png"
          alt="${data.description}"
          class="w-16 h-16 mx-auto mb-3"
        />
        <div class="flex justify-center items-center space-x-1">
          <span class="text-2xl font-bold">${data.temp}</span>
          <span class="text-lg">°C</span>
        </div>
        <p class="text-sm text-gray-600 dark:text-gray-300 mt-2 capitalize">${data.description}</p>
      </div>
    `;
  }

  async function updateWeatherWidget() {
    const container = document.getElementById('weather-container');
    const weatherData = await getWeatherData();

    if (weatherData && container) {
      container.innerHTML = weatherData
        .map(data => createWeatherCard(data))
        .join('');
    }
  }

  // Actualizar el widget cuando la página cargue
  document.addEventListener('DOMContentLoaded', updateWeatherWidget);

  // Actualizar cada hora
  setInterval(updateWeatherWidget, 3600000);
</script>

<style>
  .weather-day {
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
</style>